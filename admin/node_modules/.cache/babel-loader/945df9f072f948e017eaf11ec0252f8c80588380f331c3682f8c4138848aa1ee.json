{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\peer_front\\\\EduLink-Peer-Tutoring-App\\\\frontend\\\\src\\\\components\\\\dashboard\\\\AccountTypeContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// AccountTypeContext.js\nimport React, { createContext, useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccountTypeContext = /*#__PURE__*/createContext();\nexport const AccountTypeProvider = ({\n  children\n}) => {\n  _s();\n  const [accountType, setAccountType] = useState(\"student\"); // Default value\n\n  return /*#__PURE__*/_jsxDEV(AccountTypeContext.Provider, {\n    value: {\n      accountType,\n      setAccountType\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountTypeProvider, \"7b7dIl7fWi04XCet7Rk5NjDPEKQ=\");\n_c = AccountTypeProvider;\nexport const useAccountType = () => {\n  _s2();\n  return useContext(AccountTypeContext);\n};\n_s2(useAccountType, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AccountTypeProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","jsxDEV","_jsxDEV","AccountTypeContext","AccountTypeProvider","children","_s","accountType","setAccountType","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAccountType","_s2","$RefreshReg$"],"sources":["C:/Users/ASUS/Desktop/peer_front/EduLink-Peer-Tutoring-App/frontend/src/components/dashboard/AccountTypeContext.js"],"sourcesContent":["// AccountTypeContext.js\r\nimport React, { createContext, useContext, useState } from \"react\";\r\n\r\nconst AccountTypeContext = createContext();\r\n\r\nexport const AccountTypeProvider = ({ children }) => {\r\n  const [accountType, setAccountType] = useState(\"student\"); // Default value\r\n\r\n  return (\r\n    <AccountTypeContext.Provider value={{ accountType, setAccountType }}>\r\n      {children}\r\n    </AccountTypeContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAccountType = () => useContext(AccountTypeContext);\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnE,MAAMC,kBAAkB,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,mBAAmB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC;;EAE3D,oBACEE,OAAA,CAACC,kBAAkB,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,WAAW;MAAEC;IAAe,CAAE;IAAAH,QAAA,EACjEA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAElC,CAAC;AAACR,EAAA,CARWF,mBAAmB;AAAAW,EAAA,GAAnBX,mBAAmB;AAUhC,OAAO,MAAMY,cAAc,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlB,UAAU,CAACI,kBAAkB,CAAC;AAAA;AAACc,GAAA,CAAtDD,cAAc;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}